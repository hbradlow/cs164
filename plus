Starting parse
Entering state 0
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 96 (line 331):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0
Entering state 55
Reading a token: Next token is token "+" ()
Reducing stack by rule 86 (line 319):
   $1 = nterm atom ()
-> $$ = nterm factor ()
Stack now 0
Entering state 53
Next token is token "+" ()
Reducing stack by rule 81 (line 313):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0
Entering state 52
Reducing stack by rule 267 (line 360):
-> $$ = nterm __71 ()
Stack now 0 52
Entering state 124
Next token is token "+" ()
Shifting token "+" ()
Entering state 202
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 96 (line 331):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 52 124 202
Entering state 74
Reading a token: Next token is token LINEBREAK ()
Reducing stack by rule 86 (line 319):
   $1 = nterm atom ()
-> $$ = nterm factor ()
Stack now 0 52 124 202
Entering state 53
Next token is token LINEBREAK ()
Reducing stack by rule 81 (line 313):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 52 124 202
Entering state 283
Reducing stack by rule 268 (line 307):
   $1 = nterm __71 ()
   $2 = token "+" ()
   $3 = nterm term ()
-> $$ = nterm __71 ()
Stack now 0 52
Entering state 124
Next token is token LINEBREAK ()
Reducing stack by rule 76 (line 307):
   $1 = nterm term ()
   $2 = nterm __71 ()
-> $$ = nterm expr_arith ()
Stack now 0
Entering state 51
Reducing stack by rule 74 (line 304):
   $1 = nterm expr_arith ()
-> $$ = nterm expr ()
Stack now 0
Entering state 50
Next token is token LINEBREAK ()
Reducing stack by rule 73 (line 302):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0
Entering state 49
Reducing stack by rule 62 (line 289):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0
Entering state 48
Reducing stack by rule 259 (line 370):
-> $$ = nterm __67 ()
Stack now 0 48
Entering state 103
Next token is token LINEBREAK ()
Reducing stack by rule 60 (line 286):
   $1 = nterm not_test ()
   $2 = nterm __67 ()
-> $$ = nterm and_test ()
Stack now 0
Entering state 47
Reducing stack by rule 251 (line 240):
-> $$ = nterm __63 ()
Stack now 0 47
Entering state 102
Next token is token LINEBREAK ()
Reducing stack by rule 59 (line 284):
   $1 = nterm and_test ()
   $2 = nterm __63 ()
-> $$ = nterm or_test ()
Stack now 0
Entering state 46
Next token is token LINEBREAK ()
Reducing stack by rule 261 (line 289):
-> $$ = nterm __68 ()
Stack now 0 46
Entering state 101
Reducing stack by rule 58 (line 282):
   $1 = nterm or_test ()
   $2 = nterm __68 ()
-> $$ = nterm test ()
Stack now 0
Entering state 45
Reducing stack by rule 271 (line 309):
-> $$ = nterm __73 ()
Stack now 0 45
Entering state 99
Next token is token LINEBREAK ()
Reducing stack by rule 203 (line 364):
-> $$ = nterm __39 ()
Stack now 0 45 99
Entering state 177
Reducing stack by rule 120 (line 365):
   $1 = nterm test ()
   $2 = nterm __73 ()
   $3 = nterm __39 ()
-> $$ = nterm testlist ()
Stack now 0
Entering state 57
Reducing stack by rule 26 (line 232):
   $1 = nterm testlist ()
-> $$ = nterm stmt_expr ()
Stack now 0
Entering state 33
Reducing stack by rule 20 (line 224):
   $1 = nterm stmt_expr ()
-> $$ = nterm stmt_small ()
Stack now 0
Entering state 32
Reducing stack by rule 263 (line 285):
-> $$ = nterm __69 ()
Stack now 0 32
Entering state 98
Next token is token LINEBREAK ()
Reducing stack by rule 205 (line 342):
-> $$ = nterm __40 ()
Stack now 0 32 98
Entering state 175
Next token is token LINEBREAK ()
Shifting token LINEBREAK ()
Entering state 264
Reducing stack by rule 175 (line 222):
   $1 = token LINEBREAK ()
-> $$ = nterm __25 ()
Stack now 0 32 98 175
Entering state 265
Reading a token: Now at end of input.
Reducing stack by rule 19 (line 222):
   $1 = nterm stmt_small ()
   $2 = nterm __69 ()
   $3 = nterm __40 ()
   $4 = nterm __25 ()
-> $$ = nterm stmt_simple ()
Stack now 0
Entering state 31
Reducing stack by rule 13 (line 213):
   $1 = nterm stmt_simple ()
-> $$ = nterm stmt ()
Stack now 0
Entering state 30
Reducing stack by rule 4 (line 185):
   $1 = nterm stmt ()
-> $$ = nterm input_simple ()
Stack now 0
Entering state 27
Reducing stack by rule 158 (line 180):
   $1 = nterm input_simple ()
-> $$ = nterm __17 ()
Stack now 0
Entering state 58
Now at end of input.
Reducing stack by rule 1 (line 180):
   $1 = nterm __17 ()
-> $$ = nterm program ()
Stack now 0
Entering state 26
Now at end of input.
Shifting token $end ()
Entering state 97
Stack now 0 26 97
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
