Terminals unused in grammar

   INT
   STRING
   ID
   "@println"
   EMPTY
   "@expr_list"
   "@module"
   RAWSTRING


Grammar

    0 $accept: program $end

    1 program: stmt_list

    2 stmt_list: print_stmt "\n"

    3 print_stmt: "print" expression_list

    4 expression_list: expression __0
    5                | /* empty */

    6 expression: INT_LITERAL

    7 __0: /* empty */
    8    | __0 "," expression


Terminals, with rules where they appear

$end (0) 0
"\n" (10) 2
"," (44) 8
error (256)
INT (258)
STRING (259)
ID (260)
"@println" (261)
EMPTY (262)
"@expr_list" (263)
"@module" (264)
"print" (265) 3
INT_LITERAL (266) 6
RAWSTRING (267)


Nonterminals, with rules where they appear

$accept (15)
    on left: 0
program (16)
    on left: 1, on right: 0
stmt_list (17)
    on left: 2, on right: 1
print_stmt (18)
    on left: 3, on right: 2
expression_list (19)
    on left: 4 5, on right: 3
expression (20)
    on left: 6, on right: 4 8
__0 (21)
    on left: 7 8, on right: 4 8


state 0

    0 $accept: . program $end

    "print"  shift, and go to state 1

    program     go to state 2
    stmt_list   go to state 3
    print_stmt  go to state 4


state 1

    3 print_stmt: "print" . expression_list

    INT_LITERAL  shift, and go to state 5

    $default  reduce using rule 5 (expression_list)

    expression_list  go to state 6
    expression       go to state 7


state 2

    0 $accept: program . $end

    $end  shift, and go to state 8


state 3

    1 program: stmt_list .

    $default  reduce using rule 1 (program)


state 4

    2 stmt_list: print_stmt . "\n"

    "\n"  shift, and go to state 9


state 5

    6 expression: INT_LITERAL .

    $default  reduce using rule 6 (expression)


state 6

    3 print_stmt: "print" expression_list .

    $default  reduce using rule 3 (print_stmt)


state 7

    4 expression_list: expression . __0

    $default  reduce using rule 7 (__0)

    __0  go to state 10


state 8

    0 $accept: program $end .

    $default  accept


state 9

    2 stmt_list: print_stmt "\n" .

    $default  reduce using rule 2 (stmt_list)


state 10

    4 expression_list: expression __0 .
    8 __0: __0 . "," expression

    ","  shift, and go to state 11

    $default  reduce using rule 4 (expression_list)


state 11

    8 __0: __0 "," . expression

    INT_LITERAL  shift, and go to state 5

    expression  go to state 12


state 12

    8 __0: __0 "," expression .

    $default  reduce using rule 8 (__0)
